-- Create Table	Create table ProductQty	(		Id int primary key identity(1,1),		Region varchar(50),		Product varchar(50),		Year int,		Quantity int,		Price int	);-- Insert data into Product	Insert into ProductQty values('East','Computer',2020,130,50000)	Insert into ProductQty values('South','Computer',2020,450,35000)	Insert into ProductQty values('North','Computer',2020,250,40000)	Insert into ProductQty values('East','Hard Disk',2020,190,5500)	Insert into ProductQty values('West','Computer',2021,250,45000)	Insert into ProductQty values('South','Hard Disk',2021,550,4400)	Insert into ProductQty values('West','Hard Disk',2021,650,7500)	Insert into ProductQty values('East','Pen Drive',2021,120,800)	Insert into ProductQty values('North','Mouse',2019,160,1500)	Insert into ProductQty values('South','Pen Drive',2019,270,750)	Insert into ProductQty values('East','Mouse',2019,2000,1200)	Insert into ProductQty values('West','Pen Drive',2019,190,650)-- Fetch All Records	SELECT * FROM ProductQty;-- Sub Query -> Find the details where quantity is minimum	SELECT * FROM ProductQty Where Quantity = (SELECT MIN(Quantity) as 'Min_Quantity' FROM ProductQty);-- Sub Query -> Find the details where quantity is maximum	SELECT * FROM ProductQty Where Quantity = (SELECT MAX(Quantity) as 'Max_Quantity' FROM ProductQty);-- Sub Query -> Find the details where quantities is greater than minimum	SELECT * FROM ProductQty Where Quantity > (SELECT MIN(Quantity) as 'Min_Quantity' FROM ProductQty);-- Sub Query -> Find the details where quantities is less than maximum	SELECT * FROM ProductQty Where Quantity < (SELECT MAX(Quantity) as 'Min_Quantity' FROM ProductQty);-- Create Procedure FetchAllRecords	CREATE PROCEDURE FetchAllRecords	AS	BEGIN		SELECT * FROM ProductQty;	END-- Call FetchAllRecords	EXEC FetchAllRecords;-- Return Products and their count and their availability using group by clause	SELECT Product , Count(Product) AS 'Count', SUM(Quantity) AS 'Available' FROM ProductQty GROUP BY Product;-- Return all the product with minimum quantity by using GROUP BY clause	SELECT Product, MIN(Quantity) AS 'Min_Quantity' FROM ProductQty GROUP BY Product;	SELECT Product, MIN(Quantity) AS 'Min_Quantity', MIN(Price) as 'Price' FROM ProductQty GROUP BY Product HAVING MIN(Quantity) <= 160;	SELECT Product, MIN(Quantity) AS 'Min_Quantity', MIN(Price) as 'Price' FROM ProductQty GROUP BY Product;	SELECT Product, MAX(Quantity) AS 'Max_Quantity', MAX(Price) as 'Price' FROM ProductQty GROUP BY Product HAVING MAX(Quantity) >= 160;	SELECT Product, MAX(Quantity) AS 'Max_Quantity', MAX(Price) as 'Price' FROM ProductQty GROUP BY Product;-- Create table EmployeeInfo	Create table EmployeeInfo	(		EmpId int,		EmpName varchar(50),		Occupation varchar(50),		WorkingDate date,		WorkingHours int,		Salary int	);-- Insert Records Into EmployeeInfo	Insert into EmployeeInfo values(1,'Sanjay','Engineer','2020-10-04',9,80000)	Insert into EmployeeInfo values(2,'Saurabh','Engineer','2020-10-04',12,80000)	Insert into EmployeeInfo values(3,'Joe','HR','2020-10-04',13,72000)	Insert into EmployeeInfo values(4,'Joy','Writer','2020-10-04',8,65000)	Insert into EmployeeInfo values(5,'Amita','Manager','2020-10-08',13,55000)	Insert into EmployeeInfo values(6,'Bulbuli','Writer','2020-11-06',15,45000)	Insert into EmployeeInfo values(7,'Vineet','Writer','2020-12-06',16,70000)	Insert into EmployeeInfo values(8,'Mukul','Manager','2020-12-05',7,60000)-- Fetch All Records	SELECT * FROM EmployeeInfo;-- Fetch Total Salary of All Employees	SELECT SUM(Salary) as 'Total_Salary' FROM EmployeeInfo;-- Fethc Total Salary of Employees Where WorkingHours > 9	SELECT SUM(Salary) as 'Total_Salary' FROM EmployeeInfo WHERE WorkingHours > 9;-- Fetch All Records Group by Occupation and their salary	SELECT Occupation,SUM(Salary) as 'Total_Salary' FROM EmployeeInfo GROUP BY Occupation;-- -- Fetch All Records Group by Occupation and their Avg Working Hours	SELECT Occupation, AVG(WorkingHours) as 'AvgWorkingHours' FROM EmployeeInfo Group By Occupation;-- Fetch All Records Group by Occupation and their Avg Working Hours in descending order	SELECT Occupation, AVG(WorkingHours) as 'AvgWorkingHours' FROM EmployeeInfo Group By Occupation ORDER BY AVG(WorkingHours) DESC;-- ********************************************************************************************************************************** -- Create Table Supplier	Create table Supplier		(		Supplier_Id int,		Supplier_Name varchar(50), 		City varchar(50),		State varchar(50)	);-- Insert Records into Supplier	Insert into Supplier values(100,'Microsoft','Redmond', 'Washington')	Insert into Supplier values(200,'Google','Mountain View','California')	Insert into Supplier values(300,'Oracle','Rewood City','California')	Insert into Supplier values(400,'Kimberly-Clark','Irving','Texas')	Insert into Supplier values(500,'Tyson Foods','Springdale','Arkansas')	Insert into Supplier values(600,'SC Johnson','Racine','Wisconsin')	Insert into Supplier values(700,'Dole Food Company','Westlake Village','California')	Insert into Supplier values(800,'Flowers Foods','Thomasville','Georgia')	Insert into Supplier values(900,'Electronic Arts','Redwood City','California')-- Fetch Records form Supplier	Select * from Supplier-- Create Table Customers	CREATE TABLE Customer 	(		Customer_Id int primary key identity(1,1),		FirstName varchar(20), 		ContactName varchar(20), 		Address varchar(20), 		City varchar(20),		ZipCode int, 		Country varchar(10)	);-- Insert into Customer	Insert into Customer values('Saurabh','Joe','Supertech','Noida',201301,'India')	Insert into Customer values('Sanjay','Joy','Ajnara','Mumbai',201301,'India')	Insert into Customer values('Joy','Bulbuli','Antrish','Noida',201301,'India')	Insert into Customer values('Bulbuli','Bulbuli','Supertech','Mumbai',201301,'India')	Insert into Customer values('Amita','Joe','Antrish','Mumbai',201301,'India')	Insert into Customer values('Stefanie','Bulbuli','Ajnara','Kolkatta',201301,'India')-- Fetch records	SELECT * FROM Customer;	SELECT * FROM Supplier;	SELECT * FROM Customer UNION SELECT * FROM Supplier;